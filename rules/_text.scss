// Font rules and imports
@import "./fonts" ;

// Text Styling options
// Body text relies on body el
$deferToBody 			: true;

// -- Fonts
$headingFont 	        : $montserrat;
$bodyFont 		        : sans-serif;

// -- Colors
$headingColor 	        : invert($background);
$bodyColor 		        : invert($background);

// -- Weight
$desktopHeadingWeight 	: 700;
$mobileHeadingWeight 	: 700;

// -- Font Sizings
// -- --  Desktop
$desktopHeading         : 4rem;
$desktopBody 	        : 1rem;
// -- -- Mobile
$mobileHeading 	        : 2rem;
$mobileBody 	        : .9rem;

// -- Line Heights
// -- -- Desktop
$desktopHeadingLine 	: 120%;
$desktopBodyLine 		: 150%;

// -- -- Mobile
$mobileHeadingLine 		: 100%;
$mobileBodyLine    		: 130%;

// -- Paragraph
// -- -- Margins
$desktopParagraphMargin : 1.5rem;
$mobileParagraphMargin  : 1rem;

// -- Anchors
// -- -- Anchor color
$anchorColor 	 		: $highlight;
// -- -- Hover decoration
$anchorHover 			: "underline";


// Heading sizes
// -- Desktop sizes
// $desktopHeadings 		: (1 : $desktopHeading, 2 : 3rem, 3 : 2rem, 4 : 1.5rem );
$desktopHeadings 			: false;
// -- Mobile sizes
// $mobileHeadings 		: (1 : $mobileHeading,  2 : 1.8rem, 3 : 1.6rem, 4 : 1.2rem );
$mobileHeadings 			: false;


// Heading styles
h1, h2, h3, h4, h5 {
	clear: both;
	display: inline-block;
	color: $headingColor;
	font-family: $headingFont;

	// Desktop rules
	@media #{$desktop} {
		line-height: $desktopHeadingLine;
		font-weight: $desktopHeadingWeight;
	}
	// Mobile rules
	@media #{$mobile} {
		line-height: $mobileHeadingLine;
		font-weight: $desktopHeadingWeight;
	}

	// Ensure that child elements don't get weird sizings
	a, p, span {
		font-weight: inherit;
		font-size: inherit;
	}
}

// Desktop headings
@media #{$desktop}{
	@if($desktopHeadings){
		@each $level, $size in $desktopHeadings {
			#{"h" + $level} { font-size: $size; }
		}
	} @else {
		@for $level from 1 through 4 {
			#{"h" + $level} { font-size: #{$desktopHeading * ( 1 / $level )  }; }
		}
	}
}

// Mobile headings
@media #{$mobile}{
	@if($mobileHeadings){
		@each $level, $size in $mobileHeadings {
			#{"h" + $level} { font-size: $size; }
		}
	} @else {
		@for $level from 1 through 4 {
			#{"h" + $level} { font-size: #{$mobileHeading * ( 1 / $level )  }; }
		}
	}
}



// Body text
// -- Mixin for default body text
@mixin defaultBodyText()
{
	font-family: $bodyFont;
	color: $bodyColor;
	font-size: $desktopBody;
	line-height: $desktopBodyLine;
	&.grayed-out, .gray{
		opacity: .75;
	}
	@media #{$mobile} {
		font-size: $mobileBody;
		line-height: $mobileBodyLine;
	}
}

// Choose whether to defer to body styling for all elements that aren't headings
@if($deferToBody){
	body{ @include defaultBodyText; }
} else {
	p, a, li, ol, ul, b, i, em, strong, h5, h6, li, label {	@include defaultBodyText(); }
}


// -- Paragraph rules
p{ display: inline-block; }

// -- Anchor rules
a{
	cursor: pointer;
	@if($anchorColor){
		color: $anchorColor;
	}
	&:hover { text-decoration: $anchorHover; }
}

// -- Horizontal lines
hr {
	border: 0;
	border-bottom: $border;
}

// -- Labels
label, .label-text {
	user-select: none;
	cursor: pointer;
}

// -- Small texts
small, .small-text {
	@media #{$desktop} {
		font-size: $desktopBody * .75;
	}
	@media #{$mobile} {
		font-size: $mobileBody * .75;
	}
}


// General text classes
// Font weights
.bold   { font-weight: 700; }
.italic { font-style: italic; }
.light  { font-weight: 300; }

// Text transforms
.capitalize { text-transform: capitalize; }
.lowercase 	{ text-transform: lowercase; }
.uppercase  { text-transform: uppercase; }